@model OutraClinica.Models.Consulta

@{
    Layout = null;
    ViewBag.Title = "Edit";
}

<link href="~/content/jquery.timepicker.css" rel="stylesheet" />
<script src="~/scripts/jquery.timepicker.js"></script>
<div class="modal-dialog">
    <div class="modal-content">
        @using (Html.BeginForm())
        {
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ConsultaID)

            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">Editar Consulta</h4>
            </div>

            @Html.AntiForgeryToken()

            <div class="modal-body">
                <div class="form-horizontal">
                    @Html.ValidationSummary(true)

                  
                    <div class="form-group">
                        @Html.LabelFor(model => model.Data, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Data, new { htmlAttributes = new { @class = "form-control", id="DataNascimento", @readonly = "true" } })
                            @Html.ValidationMessageFor(model => model.Data, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-lg-3"></div>
                        <div class="col-md-9"></div>
                    </div>

                    
                    <div class="form-group">
                        @Html.LabelFor(model => model.Hora, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Hora, new { htmlAttributes = new { @class = "form-control", id = "hora", @onChange = "ValidaHora()", @onkeyup = "ValidaHora()", @onclick = "ValidaHora()" } })
                            @Html.ValidationMessageFor(model => model.Hora, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-lg-3"></div>
                        <div class="col-md-9" id="msgErrorHora"></div>
                    </div>


                    
                    <div class="form-group">
                        @Html.LabelFor(model => model.PlanoDeSaude, "PlanoDeSaudeID", new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.DropDownList("PlanoDeSaudeID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.PlanoDeSaudeID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-lg-3"></div>
                        <div class="col-md-9"></div>
                    </div>

                    
                    <div class="form-group">
                        @Html.LabelFor(model => model.Paciente, "PacienteID", new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.DropDownList("PacienteID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.PacienteID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-lg-3"></div>
                        <div class="col-md-9"></div>
                    </div>

                    
                    <div class="form-group">
                        @Html.LabelFor(model => model.Medico, "MedicoID", new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.DropDownList("MedicoID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.PacienteID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-lg-3"></div>
                        <div class="col-md-9"></div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="modal-footer">
                    <input type="submit" value="Salvar" class="btn btn-success" id="btnSalvar" />
                    <input type="button" value="Cancelar" class="btn btn-default" data-dismiss="modal" />
                </div>
            </div>
        }
    </div><!-- /.modal-content -->
</div><!-- /.modal-dialog -->

<script>



    $(function () {
        $("#DataNascimento").datepicker({

            dayNames: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado'],
            dayNamesMin: ['D', 'S', 'T', 'Q', 'Q', 'S', 'S', 'D'],
            dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb', 'Dom'],
            monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],
            monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
            nextText: 'Próximo',
            prevText: 'Anterior',
            dateFormat: 'dd/MM/yy',
            buttonText: "Select date",
            changeMonth: true,
            changeYear: true,
            minDate: 1,
            maxDate: 365,
            
        });
    });


    $(function () {

        $("#hora").timepicker({
            'timeFormat': 'H:i' ,
            'minTime': '9:00am',
            'maxTime': '6:00pm',
            'scrollDefault': 'now',
        
           
        });

    });




    function ValidaHora() {
        var campo = document.getElementById("hora");
        var btnSalvar = document.getElementById("btnSalvar");
        var alertDiv = document.getElementById("msgErrorHora");

        if (campo.value.length == 0 && campo.value == "") {
            btnSalvar.style = "display: none;"
            alertDiv.style = "color:red;";
            alertDiv.innerHTML = "Campo hora é obrigatorio!";
        } else if (campo.value == "09:00" || campo.value == "09:30" || campo.value == "10:00" || campo.value == "10:30" || campo.value == "11:00" || campo.value == "11:30" || campo.value == "12:00" || campo.value == "12:30" || campo.value == "13:00" || campo.value == "13:30" || campo.value == "14:00" || campo.value == "14:30" || campo.value == "15:00" || campo.value == "15:30" || campo.value == "16:00" || campo.value == "16:30" || campo.value == "17:00" || campo.value == "17:30" || campo.value == "18:00") {
            btnSalvar.style = "";
            alertDiv.style = "display: none";
            alertDiv.value = "Hora invalida!";
        } else {
            btnSalvar.style = "display: none;"
            alertDiv.style = "color:red;";
            alertDiv.innerHTML = "Hora invalida!";
        }
    }


    $(function () {
        var dtToday = new Date();

        var month = dtToday.getMonth() + 1;
        var day = dtToday.getDate();
        var year = dtToday.getFullYear();
        if (month < 10)
            month = '0' + month.toString();
        if (day < 10)
            day = '0' + day.toString();

        var maxDate = year + '-' + month + '-' + day;
        console.log(maxDate);
        $('#Data').attr('max', maxDate);
    });
</script>

