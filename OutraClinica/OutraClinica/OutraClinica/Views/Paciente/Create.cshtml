@model OutraClinica.Models.Paciente

@{
    ViewBag.Title = "Cadastrar";
}

<h2>Criar Paciente</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-group col-lg-12">
        <div class="form-horizontal">
            <div class="col-lg-4 row"></div>
            <div class="col-lg-6 row">

                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.nome, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control", @pattern = ".{3,}", @oninvalid = "this.setCustomValidity(\'Nome deve ter no minimo 3 caracteres!\')" } })
                        @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.telefone, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.telefone, new { htmlAttributes = new { @class = "form-control", id = "telefone" } })
                        @Html.ValidationMessageFor(model => model.telefone, "", new { @class = "text-danger" })
                    </div>

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DataNascimento, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "form-control", id = "DataNascimento", @readonly = "true", @Placeholder = "Selecione a data da consulta" } })
                        @Html.ValidationMessageFor(model => model.DataNascimento, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.logradouro, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.logradouro, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.logradouro, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.numero, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.numero, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.numero, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.bairro, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.bairro, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.bairro, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.estado, "Estado", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("estado", null, "Selecione o Estado", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" id="btnSalvar" value="Criar Paciente" class="btn btn-success" />
                        @Html.ActionLink("Cancelar", "Paciente/Paciente", null, htmlAttributes: new { @class = "btn btn-default", @style = "width: 120px; margin-left: 35px;" })
                    </div>
                </div>
                </div>
            </div>
       
            </div>
            }


            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")

                <script type="text/javascript">
    $("#telefone").mask("(00) 0000-00009", { placeholder: "Ex: (51) 3366-66999" });
                </script>


                <script>
        $(function () {
            $("#DataNascimento").datepicker({
                dateFormat: 'dd/MM/yy',
                buttonText: "Select date",
                changeMonth: true,
                changeYear: true,
                yearRange: '1910:@DateTime.Now.Year'
            });
        });


                </script>



            }
